{"version":3,"sources":["pages/GamesAllPage/styles.js","components/CardGame/styles.js","selectors/selector-games.js","pages/BestSeriesGames/styles.js","CONST/types-prefix/types-prefix-games.js","services/service.js","services/async-api-games.js","services/another-service.js","components/CardAllGame/CardAllGame.jsx","pages/GamesAllPage/GamesAllPage.jsx"],"names":["S","Container","styled","div","Wrapper","section","container","colors","white","BoxCard","WrapperInfo","orange","TitleCard","h3","TextCard","h4","SubtitleCard","getBestSeriesGames","state","games","bestSeriesGames","getBestSeriesGamesIsLoading","bestSeriesGamesIsLoading","getAllGames","allGames","WrapperList","InnerDetails","devices","mobileXL","mobileL","TitleSeries","CardInner","laptop","tabletL","InnerOval","Card","greyOpacity","GAMES_TYPES_PREFIX","client","axios","create","baseURL","API_URL","responseType","api","get","data","post","put","delete","seriesGames","createAsyncThunk","a","dispatch","setBestSeriesGamesFetching","service","API","res","setBestSeriesGames","setBestSeriesGamesFetchingError","response","message","allGamesAsync","fetch","method","url","headers","then","json","console","log","setAllGames","CardAllGame","game","t","useTranslation","src","thumbnail","alt","title","release_date","platform","href","game_url","target","rel","slice","genre","GamesAllPage","useState","pending","setPending","isLoading","useSelector","useDispatch","match","useRouteMatch","history","useHistory","useEffect","result","meta","requestStatus","findHref","undefined","push","ROUTE_DETAILS_PAGE","path","params","nameGame","HTTP_REQUEST_STATUS","FULFILLED","map","index","onClick","color","height","width"],"mappings":"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","file":"static/js/8.7d447c36.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { container } from '../../CONST/mixins';\nimport { colors } from '../../CONST/colors';\n// import { Link } from 'react-router-dom';\n// import { devices } from '../../CONST/break-point';\n\nconst S = {};\n\nS.Container = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  /* background: rgba(11, 12, 42, 70%); */\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  padding-bottom: 185px;\n`;\n\nS.Wrapper = styled.section`\n  position: relative;\n  ${{ ...container }};\n  color: ${colors.white};\n  padding: 180px 10px 0;\n`;\n\nexport default S;\n","import styled from 'styled-components';\nimport { colors } from '../../CONST/colors';\n\nexport const S = {};\n\nS.BoxCard = styled.div`\n  text-align: center;\n  height: 100%;\n\n  > img {\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n    height: 180px;\n    width: 100%;\n    max-width: 315px;\n  }\n`;\n\nS.WrapperInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: calc(100% - 180px);\n  padding: 0 15px 15px 15px;\n\n  > a {\n    color: ${colors.white};\n\n    &:hover {\n      color: ${colors.orange};\n    }\n  }\n`;\n\nS.TitleCard = styled.h3`\n  margin-top: 10px;\n  text-transform: uppercase;\n  color: ${colors.white};\n  text-decoration: none;\n  letter-spacing: 3px;\n`;\n\nS.TextCard = styled.h4`\n  margin-top: 12px;\n  text-transform: uppercase;\n  color: ${colors.orange};\n  text-decoration: none;\n  letter-spacing: 3px;\n  font-size: 10px;\n`;\n\nS.SubtitleCard = styled.h4`\n  margin-top: 5px;\n  text-transform: uppercase;\n  color: ${colors.white};\n  text-decoration: none;\n  letter-spacing: 2px;\n  font-size: 8px;\n`;\n","export const getBestSeriesGames = (state) => {\n  return state.games.bestSeriesGames;\n};\n\nexport const getBestSeriesGamesIsLoading = (state) => {\n  return state.games.bestSeriesGamesIsLoading;\n};\n\nexport const getBestSeriesGamesError = (state) => {\n  return state.games.bestSeriesGamesError;\n};\n\nexport const getAllGames = (state) => {\n  return state.games.allGames;\n};\n","import styled from 'styled-components';\nimport { container } from '../../CONST/mixins';\nimport { colors } from '../../CONST/colors';\nimport { devices } from '../../CONST/break-point';\n// import { Link } from 'react-router-dom';\n\nexport const S = {};\n\nS.WrapperList = styled.section`\n  ${{ ...container }};\n`;\n\nS.InnerDetails = styled.div`\n  min-height: 100vh;\n  padding: 180px 10px;\n\n  @media ${devices.mobileXL} {\n    padding: 164px 10px 117px;\n  }\n\n  @media ${devices.mobileL} {\n    padding: 145px 10px 117px;\n  }\n`;\n\nS.TitleSeries = styled.div`\n  position: relative;\n  z-index: 2;\n  margin-bottom: 20px;\n  text-align: center;\n  font-family: assassin-st, sans-serif;\n  text-transform: capitalize;\n  font-size: 32px;\n  color: rgba(255, 255, 255, 0.7);\n`;\n\nS.CardInner = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n\n  @media ${devices.laptop} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media ${devices.tabletL} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media ${devices.mobileXL} {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n\nS.InnerOval = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 380px);\n`;\n\nS.Card = styled.div`\n  width: 100%;\n  max-width: 315px;\n  border-radius: 15px;\n  background: ${colors.greyOpacity};\n  cursor: pointer;\n  transition: transform 0.6s;\n  text-decoration: none;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  @media ${devices.tabletL} {\n    &:nth-child(odd) {\n      justify-self: flex-end;\n    }\n  }\n\n  @media ${devices.mobileXL} {\n    justify-self: center;\n\n    &:nth-child(odd) {\n      justify-self: center;\n    }\n  }\n`;\n","export const GAMES_TYPES_PREFIX = {\n  bestSeriesGames: 'bestGames/bestSeriesGames',\n  anotherGames: 'allGames/anotherGames',\n};\n","import axios from 'axios';\nimport { API_URL } from './http-common';\n\nconst client = axios.create({\n  baseURL: API_URL,\n  responseType: 'json',\n});\n\nclass service {\n  get(api) {\n    return client.get(api);\n  }\n\n  post(api, data) {\n    return client.post(api, data);\n  }\n\n  put(api, data) {\n    return client.put(api, data);\n  }\n\n  delete(api) {\n    return client.delete(api);\n  }\n}\n\nexport default new service();\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { API } from '../CONST/api-endpoints';\nimport { GAMES_TYPES_PREFIX } from '../CONST/types-prefix/types-prefix-games';\nimport {\n  setAllGames,\n  setBestSeriesGames,\n  setBestSeriesGamesFetching,\n  setBestSeriesGamesFetchingError,\n} from '../redux-slices/games-slice';\nimport { getGames } from './another-service';\nimport service from './service';\n\nexport const seriesGames = createAsyncThunk(\n  GAMES_TYPES_PREFIX.bestSeriesGames,\n  async (data, { dispatch }) => {\n    try {\n      dispatch(setBestSeriesGamesFetching());\n      const res = await service.get(`${API.bestSeriesGames}/:${data}`);\n      dispatch(setBestSeriesGames(res.data));\n      return res.data;\n    } catch (e) {\n      dispatch(setBestSeriesGamesFetchingError(e));\n      return e.response.data.message;\n    }\n  }\n);\n\nexport const allGamesAsync = createAsyncThunk(\n  GAMES_TYPES_PREFIX.anotherGames,\n  async (data, { dispatch }) => {\n    try {\n      dispatch(setBestSeriesGamesFetching());\n      const res = await getGames(`${API.allGames}`);\n      console.log(res);\n      dispatch(setAllGames(res));\n    } catch (e) {\n      dispatch(setBestSeriesGamesFetchingError(e));\n      return e.response.data.message;\n    }\n  }\n);\n","export function getGames(api) {\n  return fetch('https://free-to-play-games-database.p.rapidapi.com/api/games', {\n    method: 'GET',\n    url: api,\n    headers: {\n      'x-rapidapi-host': 'free-to-play-games-database.p.rapidapi.com',\n      'x-rapidapi-key': '155780a428msh6759a051afd97e3p1c2c2cjsn2fb08ece979a',\n    },\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      return data;\n    });\n}\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { S } from '../CardGame/styles';\n\nexport const CardAllGame = ({ game }) => {\n  const { t } = useTranslation(['common']);\n\n  return (\n    <S.BoxCard>\n      <img src={game?.thumbnail} alt=\"\" />\n      <S.WrapperInfo>\n        <S.TitleCard>{game?.title}</S.TitleCard>\n        <S.TextCard>{t('release_date')}</S.TextCard>\n        <S.SubtitleCard>{game?.release_date}</S.SubtitleCard>\n        <S.TextCard>{t('platforms')}</S.TextCard>\n        <S.SubtitleCard>{game?.platform}</S.SubtitleCard>\n        <S.TextCard>{t('website')}</S.TextCard>\n        <a href={game?.game_url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {game?.game_url.slice(0, 23) + '...'}\n        </a>\n        <S.TextCard>{t('genre')}</S.TextCard>\n        <S.SubtitleCard>{game?.genre}</S.SubtitleCard>\n      </S.WrapperInfo>\n    </S.BoxCard>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HTTP_REQUEST_STATUS } from '../../CONST/http-request-status';\nimport {\n  getAllGames,\n  getBestSeriesGamesIsLoading,\n} from '../../selectors/selector-games';\nimport { allGamesAsync } from '../../services/async-api-games';\nimport Style from './styles';\nimport { S } from '../BestSeriesGames/styles';\nimport { Oval } from 'react-loader-spinner';\nimport { ROUTE_DETAILS_PAGE } from '../../CONST/list-local-routs/list-routes-public';\nimport { useRouteMatch } from 'react-router-dom';\nimport { CardAllGame } from '../../components/CardAllGame/CardAllGame';\nimport { useHistory } from 'react-router-dom';\n\nconst GamesAllPage = () => {\n  const [pending, setPending] = useState('');\n  const isLoading = useSelector(getBestSeriesGamesIsLoading);\n  const allGames = useSelector(getAllGames);\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  useEffect(async () => {\n    (async () => {\n      const result = await dispatch(allGamesAsync());\n      setPending(result.meta.requestStatus);\n    })();\n  }, []);\n\n  const findHref = ({ target }) => {\n    if (target.href === undefined) {\n      history.push(ROUTE_DETAILS_PAGE.path);\n    }\n  };\n\n  console.log(pending);\n\n  return (\n    <Style.Container>\n      <Style.Wrapper>\n        {isLoading ? (\n          <>\n            <S.TitleSeries>{match.params.nameGame}</S.TitleSeries>\n            <S.CardInner>\n              {pending === HTTP_REQUEST_STATUS.FULFILLED &&\n                allGames.map((game, index) => (\n                  <S.Card onClick={findHref} key={index}>\n                    <CardAllGame game={game} />\n                  </S.Card>\n                ))}\n            </S.CardInner>\n          </>\n        ) : (\n          <S.InnerOval>\n            <Oval color=\"#ff1b1b\" height={80} width={80} />\n          </S.InnerOval>\n        )}\n      </Style.Wrapper>\n    </Style.Container>\n  );\n};\n\nexport default GamesAllPage;\n"],"sourceRoot":""}